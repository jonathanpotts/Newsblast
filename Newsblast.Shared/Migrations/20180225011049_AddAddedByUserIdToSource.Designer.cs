// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Newsblast.Shared.Data;
using System;

namespace Newsblast.Shared.Migrations
{
    [DbContext(typeof(NewsblastContext))]
    [Migration("20180225011049_AddAddedByUserIdToSource")]
    partial class AddAddedByUserIdToSource
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Newsblast.Shared.Data.Models.Embed", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("SourceId")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Embeds");
                });

            modelBuilder.Entity("Newsblast.Shared.Data.Models.Source", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FeedUrl");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Url");

                    b.Property<long>("__AddedByUserId");

                    b.HasKey("Id");

                    b.ToTable("Sources");
                });

            modelBuilder.Entity("Newsblast.Shared.Data.Models.Subscription", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("LastDate");

                    b.Property<string>("SourceId")
                        .IsRequired();

                    b.Property<long>("__ChannelId");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Newsblast.Shared.Data.Models.Embed", b =>
                {
                    b.HasOne("Newsblast.Shared.Data.Models.Source", "Source")
                        .WithMany("Embeds")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Newsblast.Shared.Data.Models.Subscription", b =>
                {
                    b.HasOne("Newsblast.Shared.Data.Models.Source", "Source")
                        .WithMany("Subscriptions")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
